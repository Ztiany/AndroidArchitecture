apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

androidExtensions {
    experimental = true
}

boolean openDebug = isOpenDebug.toBoolean()
boolean showDisturbingDebugTools = showDisturbingDebugTools.toBoolean()
boolean trustAllHttpsCertification = httpsTrustAll.toBoolean()
boolean openLog = isOpenLog.toBoolean()
String specifiedHost = HOST_ENV

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        buildConfigField("boolean", "openDebug", "$openDebug")
        buildConfigField("boolean", "showDisturbingDebugTools", "$showDisturbingDebugTools")
        buildConfigField("boolean", "trustAllHttpsCertification", "$trustAllHttpsCertification")
        buildConfigField("boolean", "openLog", "$openLog")
        buildConfigField("String", "specifiedHost", "\"$specifiedHost\"")
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main {
            java.srcDirs += "src/github/java"
            res.srcDirs += "src/github/res"

            java.srcDirs += "src/common/java"
            res.srcDirs += "src/common/res"

            if (openDebug) {
                java.srcDirs += "src/tools-debug/java"
                res.srcDirs += "src/tools-debug/res"
            } else {
                java.srcDirs += "src/tools-release/java"
                res.srcDirs += "src/tools-release/res"
            }
        }
    }

}

dependencies {

    api fileTree(dir: 'libs', include: ['*.jar'])

    //测试
    testImplementation testLibraries.junit

    //基础组件库
    api project(':lib_base')//基础类库
    api project(':lib_network')//基础网络库
    api project(':lib_cache')//缓存库
    api project(':lib_media_selector')//媒体选择器
    api project(':lib_qrcode')//二维码

    //Android
    api androidLibraries.multidex
    api androidLibraries.exifinterface
    api androidLibraries.flexbox
    api androidLibraries.ktx

    /*Hilt*/
    api androidLibraries.hiltDagger
    kapt androidLibraries.hiltDaggerApt
    api androidLibraries.hiltViewiewModel
    kapt androidLibraries.hiltApt
    /*ARouter*/
    api thirdLibraries.arouter
    kapt thirdLibraries.arouterAnnotation
    /*OkHttp*/
    implementation thirdLibraries.okHttp
    implementation thirdLibraries.okHttpLogging
    /*Gson*/
    api thirdLibraries.gson
    /*Retrofit*/
    api thirdLibraries.retrofit
    implementation thirdLibraries.retrofitConverterGson
    implementation thirdLibraries.retrofitRxJava2CallAdapter
    /*RxKotlin, RxBinding*/
    api thirdLibraries.rxBindingCompat
    api kotlinLibraries.rxKotlin
    /*GlideAPT*/
    kapt thirdLibraries.glideApt

    /*UI*/
    api uiLibraries.qmui
    api uiLibraries.circleImageView

    //Debug
    if (openDebug) {
        //Stetho
        implementation debugLibraries.stetho
        implementation debugLibraries.stethoOkhttp3
        //LeakCanary
        implementation debugLibraries.debugLeakCanary
        //UETool
        implementation debugLibraries.ueTool
    }

}