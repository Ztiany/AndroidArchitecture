apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

boolean openDebug = isOpenDebug.toBoolean()

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        buildConfigField("boolean", "openDebug", "$openDebug")
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            if (openDebug) {
                java.srcDirs += "src/_debug/java"
                res.srcDirs += "src/_debug/res"
            }
        }
    }


}

dependencies {

    api fileTree(dir: 'libs', include: ['*.jar'])

    //测试
    testImplementation testDependencies.junit

    //基础组件库
    api project(':AndroidBase')//基础类库
    api project(':lib_media_selector')//选择器
    api project(':lib_qrcode')//二维码
    api project(':lib_cache')//二维码
    //implementation project(':lib_security')//App安全

    //Android
    api(androidLibraries.androidCompatV13) {
        transitive = false
    }
    api androidLibraries.androidCard
    api androidLibraries.multiDex
    api androidLibraries.androidExif
    api(androidLibraries.gridlayout) {
        transitive = false
    }

    //kotlin
    api kotlinLibraries.kotlinStdlib
    api kotlinLibraries.kotlinReflect
    api kotlinLibraries.ankoCommons
    api kotlinLibraries.ankoCommonsV4
    api kotlinLibraries.ankoCommonsV7
    api kotlinLibraries.ankoLayoutSDK25
    api kotlinLibraries.rxKotlin2

    //Third Library(apt放前面)
    /*Dagger2*/
    kapt thirdDependencies.dagger2Apt
    kapt thirdDependencies.dagger2AndroidApt
    /*ARouter*/
    api thirdDependencies.arouter
    kapt thirdDependencies.arouterAnnotation
    /*OkHttp*/
    implementation thirdDependencies.okHttp
    implementation thirdDependencies.okHttpLogging
    /*gson*/
    api thirdDependencies.gson
    /*retrofit*/
    api thirdDependencies.retrofit
    implementation thirdDependencies.retrofitConverterGson
    implementation thirdDependencies.retrofitRxJava2CallAdapter
    /*image compression*/
    api thirdDependencies.luban
    /*rx binding*/
    api thirdDependencies.rxBindingCompat2
    /*glideAPT*/
    kapt thirdDependencies.glideApt

    /*UI*/
    api androidLibraries.flexbox
    api uiLibrary.bottomBar
    api uiLibrary.pageIndicatorView
    api uiLibrary.roundedImageView
    api uiLibrary.circleImageView
    api uiLibrary.ultraviewpager
    api uiLibrary.viewpagerTransformers
    api uiLibrary.fotoapparat
    api(uiLibrary.cameraView) {
        exclude group: 'com.android.support'
    }
    api(uiLibrary.timePicker) {
        exclude group: 'com.android.support'
    }
    api 'com.github.chrisbanes:PhotoView:2.1.3'
    api 'com.github.rubensousa:gravitysnaphelper:1.5'

    //第三方平台
    // bugly
    implementation thirdPlatform.buglyCrashreportUpgrade
    //多渠道打包
    implementation thirdPlatform.VasDolly

    //Debug
    if (openDebug) {
        //stetho
        implementation thirdDependencies.stetho
        implementation thirdDependencies.stethoOkhttp3
        //LeakCanary
        implementation thirdDependencies.debugLeakCanary
        //UETool
        implementation thirdDependencies.UETool
        implementation thirdDependencies.chuck
    } else {
        //stetho
        compileOnly thirdDependencies.stetho
        compileOnly thirdDependencies.stethoOkhttp3
        //LeakCanary
        compileOnly thirdDependencies.debugLeakCanary
        //UETool
        compileOnly thirdDependencies.UETool
        compileOnly thirdDependencies.chuck
    }

}
