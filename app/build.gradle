apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

androidExtensions {
    experimental = true
}

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    signingConfigs {
        release {
            keyAlias rootProject.releaseKeyAlias
            keyPassword rootProject.releaseKeyPassword
            storeFile file(rootProject.releaseStoreFile)
            storePassword rootProject.releaseStorePassword
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.ztiany.architecture"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        resConfigs "zh", "en"//只需要中文和英文资源

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }

        ndk {
            abiFilters 'armeabi-v7a'
        }

    }

    testOptions { unitTests.returnDefaultValues = true }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    buildTypes {
        //测试
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            manifestPlaceholders = [screenOrientation: "unspecified"]
            resValue("string", "app_name", "Android架构模板(测试)")
        }

        //正式发布
        release {
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [screenOrientation: "portrait"]
            resValue("string", "app_name", "Android架构模板")
        }
    }

    sourceSets {
        main {
            if (rootProject.isMultiApp) {
                manifest.srcFile 'src/app_fake/AndroidManifest.xml'
            } else {//组合
                java.srcDirs += "src/app/java"
                res.srcDirs += "src/app/res"
                manifest.srcFile 'src/app/AndroidManifest.xml'
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}-${variant.versionName}.apk"
        }
    }

}

dependencies {

    if (!rootProject.isMultiApp) {

        testImplementation testLibraries.junit

        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation project(path: ':module_base')
        implementation project(path: ':module_home')

        //第三方库

        /*Dagger2*/
        kapt thirdLibraries.dagger2Apt
        kapt thirdLibraries.dagger2AndroidApt
        /*ARouter*/
        kapt thirdLibraries.arouterAnnotation

    } else {
        implementation androidLibraries.androidCompatV7
        implementation androidLibraries.androidDesign
    }

}
