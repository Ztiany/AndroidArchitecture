apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

androidExtensions {
    experimental = true
}

boolean openDebug = isOpenDebug.toBoolean()

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        buildConfigField("boolean", "openDebug", "$openDebug")
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            if (openDebug) {
                java.srcDirs += "src/_debug/java"
                res.srcDirs += "src/_debug/res"
            }
        }
    }


}

dependencies {

    api fileTree(dir: 'libs', include: ['*.jar'])

    //测试
    testImplementation testLibraries.junit

    //基础组件库
    api project(':AndroidBase')//基础类库
    api project(':lib_network')//基础网络库
    api project(':lib_media_selector')//选择器
    api project(':lib_qrcode')//二维码
    api project(':lib_cache')//二维码
    //api project(':lib_social')//第三方登录、分享
    //implementation project(':lib_security')//App安全

    //Android
    api(androidLibraries.androidCompatV13) {
        transitive = false
    }
    api androidLibraries.androidCard
    api androidLibraries.multiDex
    api androidLibraries.androidExif
    api(androidLibraries.gridlayout) {
        transitive = false
    }

    //kotlin
    api kotlinLibraries.kotlinStdlib
    api kotlinLibraries.kotlinReflect
    api kotlinLibraries.ankoCommons
    api kotlinLibraries.ankoCommonsV4
    api kotlinLibraries.ankoCommonsV7
    api kotlinLibraries.ankoLayoutSDK
    api kotlinLibraries.rxKotlin2

    //Third Library(apt放前面)
    /*Dagger2*/
    kapt thirdLibraries.dagger2Apt
    kapt thirdLibraries.dagger2AndroidApt
    /*ARouter*/
    api thirdLibraries.arouter
    kapt thirdLibraries.arouterAnnotation
    /*OkHttp*/
    implementation thirdLibraries.okHttp
    implementation thirdLibraries.okHttpLogging
    /*gson*/
    api thirdLibraries.gson
    /*retrofit*/
    api thirdLibraries.retrofit
    implementation thirdLibraries.retrofitConverterGson
    implementation thirdLibraries.retrofitRxJava2CallAdapter
    /*image compression*/
    api thirdLibraries.luban
    /*rx binding*/
    api thirdLibraries.rxBindingCompat2
    /*glideAPT*/
    kapt thirdLibraries.glideApt

    /*UI*/
    api uiLibraries.bottomBar
    api uiLibraries.circleImageView
    api uiLibraries.photoView

    //Debug
    if (openDebug) {
        //stetho
        implementation debugLibraries.stetho
        implementation debugLibraries.stethoOkhttp3
        //LeakCanary
        implementation debugLibraries.debugLeakCanary
        //UETool
        implementation debugLibraries.ueTool
        implementation debugLibraries.chuck
    } else {
        //stetho
        compileOnly debugLibraries.stetho
        compileOnly debugLibraries.stethoOkhttp3
        //LeakCanary
        compileOnly debugLibraries.debugLeakCanary
        //UETool
        compileOnly debugLibraries.UETool
        compileOnly debugLibraries.chuck
    }

}
