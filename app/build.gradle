apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: 'channel.gradle'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

androidExtensions {
    experimental = true
}

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
            storeFile rootProject.file(releaseKeyFileName)
            storePassword releaseKeyPassword
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.android.architecture"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        resConfigs "zh", "en"//只需要中文和英文资源

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }

        ndk {
            abiFilters 'armeabi-v7a'
        }

    }

    testOptions { unitTests.returnDefaultValues = true }

    dexOptions {
        javaMaxHeapSize "8g"
    }

    buildTypes {
        //测试
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            manifestPlaceholders = [screenOrientation: "unspecified"]
            resValue("string", "app_name", "Android 架构模板(测试)")
            ndk {
                abiFilters 'armeabi-v7a', 'x86'
            }
        }

        //正式发布
        release {
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [screenOrientation: "portrait"]
            resValue("string", "app_name", "Android 架构模板")
        }
    }

    sourceSets {
        main {
            if (!rootProject.isMultiApp) {
                java.srcDirs += "src/app/java"
                res.srcDirs += "src/app/res"
                manifest.srcFile 'src/app/AndroidManifest.xml'
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "8g"
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}-${variant.versionName}.apk"
        }
    }

    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

}

dependencies {

    if (!rootProject.isMultiApp) {
        testImplementation testLibraries.junit

        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation project(path: ':module_base')
        implementation project(path: ':module_home')
        implementation project(path: ':module_account')

        /*Hilt*/
        api androidLibraries.hiltDagger
        kapt androidLibraries.hiltDaggerApt
        api androidLibraries.hiltViewiewModel
        kapt androidLibraries.hiltApt
        /*ARouter*/
        kapt thirdLibraries.arouterAnnotation
    } else {
        /*Hilt*/
        api androidLibraries.hiltDagger
        kapt androidLibraries.hiltDaggerApt
        api androidLibraries.hiltViewiewModel
        kapt androidLibraries.hiltApt
        //app
        implementation androidLibraries.appcompat
        implementation androidLibraries.material
    }

}
